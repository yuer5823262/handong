<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dampouring.model.dao.DamSegmentMapper">
  <resultMap id="BaseResultMap" type="com.example.dampouring.model.pojo.DamSegment">
    <id column="ds_no" jdbcType="INTEGER" property="dsNo" />
    <result column="ds_name" jdbcType="VARCHAR" property="dsName" />
    <result column="bs_no" jdbcType="INTEGER" property="bsNo" />
    <result column="elevation_start" jdbcType="DOUBLE" property="elevationStart" />
    <result column="elevation_end" jdbcType="DOUBLE" property="elevationEnd" />
    <result column="height" jdbcType="DOUBLE" property="height" />
    <result column="stake_mark_up" jdbcType="DOUBLE" property="stakeMarkUp" />
    <result column="stake_mark_down" jdbcType="DOUBLE" property="stakeMarkDown" />
    <result column="stake_mark_left" jdbcType="DOUBLE" property="stakeMarkLeft" />
    <result column="stake_mark_right" jdbcType="DOUBLE" property="stakeMarkRight" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Base_Column_List">
    ds_no, ds_name, bs_no, elevation_start, elevation_end, height, stake_mark_up,
    stake_mark_down, stake_mark_left, stake_mark_right, create_time, `operator`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dam_segment
    where ds_no = #{dsNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey">
    delete from dam_segment
    where ds_no in
    <foreach collection="ids" close=")" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.example.dampouring.model.pojo.DamSegment">
    insert into dam_segment (ds_no, ds_name, bs_no,
        elevation_start, elevation_end,
      height, stake_mark_up, stake_mark_down, 
      stake_mark_left, stake_mark_right, create_time, 
      `operator`)
    values (#{dsNo,jdbcType=INTEGER}, #{dsName,jdbcType=VARCHAR}, #{bsNo,jdbcType=INTEGER}, 
      #{elevationStart,jdbcType=DOUBLE}, #{elevationEnd,jdbcType=DOUBLE},
      #{height,jdbcType=DOUBLE}, #{stakeMarkUp,jdbcType=DOUBLE}, #{stakeMarkDown,jdbcType=DOUBLE}, 
      #{stakeMarkLeft,jdbcType=DOUBLE}, #{stakeMarkRight,jdbcType=DOUBLE}, #{createTime,jdbcType=VARCHAR}, 
      #{operator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.dampouring.model.pojo.DamSegment">
    insert into dam_segment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dsNo != null">
        ds_no,
      </if>
      <if test="dsName != null">
        ds_name,
      </if>
      <if test="bsNo != null">
        bs_no,
      </if>
      <if test="elevationStart != null">
        elevation_start,
      </if>
      <if test="elevationEnd != null">
        elevation_end,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="stakeMarkUp != null">
        stake_mark_up,
      </if>
      <if test="stakeMarkDown != null">
        stake_mark_down,
      </if>
      <if test="stakeMarkLeft != null">
        stake_mark_left,
      </if>
      <if test="stakeMarkRight != null">
        stake_mark_right,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dsNo != null">
        #{dsNo,jdbcType=INTEGER},
      </if>
      <if test="dsName != null">
        #{dsName,jdbcType=VARCHAR},
      </if>
      <if test="bsNo != null">
        #{bsNo,jdbcType=INTEGER},
      </if>
      <if test="elevationStart != null">
        #{elevationStart,jdbcType=DOUBLE},
      </if>
      <if test="elevationEnd != null">
        #{elevationEnd,jdbcType=DOUBLE},
      </if>
      <if test="height != null">
        #{height,jdbcType=DOUBLE},
      </if>
      <if test="stakeMarkUp != null">
        #{stakeMarkUp,jdbcType=DOUBLE},
      </if>
      <if test="stakeMarkDown != null">
        #{stakeMarkDown,jdbcType=DOUBLE},
      </if>
      <if test="stakeMarkLeft != null">
        #{stakeMarkLeft,jdbcType=DOUBLE},
      </if>
      <if test="stakeMarkRight != null">
        #{stakeMarkRight,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.dampouring.model.pojo.DamSegment">
    update dam_segment
    <set>
      <if test="dsName != null">
        ds_name = #{dsName,jdbcType=VARCHAR},
      </if>
      <if test="bsNo != null">
        bs_no = #{bsNo,jdbcType=INTEGER},
      </if>

      <if test="elevationStart != null">
        elevation_start = #{elevationStart,jdbcType=DOUBLE},
      </if>
      <if test="elevationEnd != null">
        elevation_end = #{elevationEnd,jdbcType=DOUBLE},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=DOUBLE},
      </if>
      <if test="stakeMarkUp != null">
        stake_mark_up = #{stakeMarkUp,jdbcType=DOUBLE},
      </if>
      <if test="stakeMarkDown != null">
        stake_mark_down = #{stakeMarkDown,jdbcType=DOUBLE},
      </if>
      <if test="stakeMarkLeft != null">
        stake_mark_left = #{stakeMarkLeft,jdbcType=DOUBLE},
      </if>
      <if test="stakeMarkRight != null">
        stake_mark_right = #{stakeMarkRight,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where ds_no = #{dsNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.dampouring.model.pojo.DamSegment">
    update dam_segment
    set ds_name = #{dsName,jdbcType=VARCHAR},
      bs_no = #{bsNo,jdbcType=INTEGER},
      elevation_start = #{elevationStart,jdbcType=DOUBLE},
      elevation_end = #{elevationEnd,jdbcType=DOUBLE},
      height = #{height,jdbcType=DOUBLE},
      stake_mark_up = #{stakeMarkUp,jdbcType=DOUBLE},
      stake_mark_down = #{stakeMarkDown,jdbcType=DOUBLE},
      stake_mark_left = #{stakeMarkLeft,jdbcType=DOUBLE},
      stake_mark_right = #{stakeMarkRight,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=VARCHAR},
      `operator` = #{operator,jdbcType=VARCHAR}
    where ds_no = #{dsNo,jdbcType=INTEGER}
  </update>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dam_segment
    where ds_name = #{ds_name,jdbcType=VARCHAR}
  </select>
  <select id="selectVoList" resultType="com.example.dampouring.model.vo.DamSegmentVO">
    select
    d.ds_no as dsNo,
    d.ds_name as dsName,
    b.bs_name as bsName,
    b.contractor as contractor,
    d.elevation_start as elevationStart,
    d.elevation_end as elevationEnd,
    d.height as height,
    d.stake_mark_up as stakeMarkUp,
    d.stake_mark_down as stakeMarkDown,
    d.stake_mark_left as stakeMarkLeft,
    d.stake_mark_right as stakeMarkRight
    from dam_segment d
    left join big_segment b on d.bs_no = b.bs_no
    ORDER BY d.ds_name
  </select>
  <select id="selectListByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dam_segment
    where ds_no in
    <foreach collection="ids" close=")" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </select>
  <select id="selectListByBSNo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from dam_segment
    where bs_no = #{value,jdbcType=INTEGER}
  </select>

  <select id="pouringMonitor" resultType="com.example.dampouring.model.vo.PouringMonitorVO">
    SELECT
    t3.ds_name AS dsName,
    t3.elevation_start AS elevationStart,
    t3.elevation_end AS elevationEnd,
    t1.max_elevation_end AS MaxElevationEnd,
    t2.small_sb_no AS sbNo
    FROM
    (
    SELECT
    ds_name,
    max(ssb.elevation_end) AS max_elevation_end
    FROM
    dam_segment ds
    LEFT JOIN small_storage_bin ssb ON ssb.ds_start &lt;= ds.ds_name
    AND ssb.ds_end >= ds.ds_name
    GROUP BY
    ds.ds_name
    ) t1,
    small_storage_bin t2,
    dam_segment t3
    WHERE
    t2.ds_start &lt;= t1.ds_name
    AND t2.ds_end >= t1.ds_name
    AND t1.max_elevation_end = t2.elevation_end
    AND t1.ds_name = t3.ds_name
    ORDER BY t3.ds_name
  </select>

  <select id="selectVoListQue" resultType="com.example.dampouring.model.vo.DamSegmentVO" parameterType="com.example.dampouring.query.DamSegmentQue">
    select
      d.ds_no as dsNo,
      d.ds_name as dsName,
      b.bs_name as bsName,
      b.contractor as contractor,
      d.elevation_start as elevationStart,
      d.elevation_end as elevationEnd,
      d.height as height,
      d.stake_mark_up as stakeMarkUp,
      d.stake_mark_down as stakeMarkDown,
      d.stake_mark_left as stakeMarkLeft,
      d.stake_mark_right as stakeMarkRight
    from dam_segment d
           left join big_segment b on d.bs_no = b.bs_no
    <where>
      <if test="bsId != null">
        d.bs_no = #{bsId}
      </if>
      <if test="dsId != null">
        d.ds_no =#{dsId}
      </if>
      <if test="que != null">
        d.ds_name = #{que} or b.contractor like "%"#{que}"%" or b.bs_name like "%"#{que}"%"
      </if>
    </where>
    ORDER BY d.ds_name
  </select>
</mapper>