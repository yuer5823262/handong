<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dampouring.model.dao.BigSegmentMapper">
  <resultMap id="BaseResultMap" type="com.example.dampouring.model.pojo.BigSegment">
    <id column="bs_no" jdbcType="INTEGER" property="bsNo" />
    <result column="bs_name" jdbcType="VARCHAR" property="bsName" />
    <result column="contractor" jdbcType="VARCHAR" property="contractor" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Base_Column_List">
    bs_no, bs_name, contractor, remark, create_time, `operator`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from big_segment
    where bs_no = #{bsNo,jdbcType=INTEGER}
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from big_segment
    where bs_name = #{bs_name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey">
    delete from big_segment
    where bs_no in
    <foreach close=")" collection="ids" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>

  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from big_segment
  </select>
  <select id="selectListByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from big_segment
    where bs_no in
    <foreach collection="ids" close=")" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </select>
  <insert id="insert" parameterType="com.example.dampouring.model.pojo.BigSegment">
    insert into big_segment (bs_no, bs_name, contractor, 
      remark, create_time, `operator`
      )
    values (#{bsNo,jdbcType=INTEGER}, #{bsName,jdbcType=VARCHAR}, #{contractor,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.dampouring.model.pojo.BigSegment">
    insert into big_segment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bsNo != null">
        bs_no,
      </if>
      <if test="bsName != null">
        bs_name,
      </if>
      <if test="contractor != null">
        contractor,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bsNo != null">
        #{bsNo,jdbcType=INTEGER},
      </if>
      <if test="bsName != null">
        #{bsName,jdbcType=VARCHAR},
      </if>
      <if test="contractor != null">
        #{contractor,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.dampouring.model.pojo.BigSegment">
    update big_segment
    <set>
      <if test="bsName != null">
        bs_name = #{bsName,jdbcType=VARCHAR},
      </if>
      <if test="contractor != null">
        contractor = #{contractor,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where bs_no = #{bsNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.dampouring.model.pojo.BigSegment">
    update big_segment
    set bs_name = #{bsName,jdbcType=VARCHAR},
      contractor = #{contractor,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      `operator` = #{operator,jdbcType=VARCHAR}
    where bs_no = #{bsNo,jdbcType=INTEGER}
  </update>
  <select id="selectListByContractor" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from big_segment
    where contractor = #{value,jdbcType=VARCHAR}
  </select>

  <select id="selectListQue" resultMap="BaseResultMap" parameterType="com.example.dampouring.query.BigSegmentQue">
    select
    <include refid="Base_Column_List"></include>
    from big_segment
    <where>
      <if test="que != null">
        contractor like "%"#{que}"%" or bs_name like "%"#{que}"%"
      </if>
      <if test="bsName != null">
        bs_name =#{bsName}
      </if>
    </where>
  </select>
</mapper>