<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dampouring.model.dao.TempControlNormInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.dampouring.model.pojo.TempControlNormInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="temp_control_id" jdbcType="INTEGER" property="tempControlId" />
    <result column="month" jdbcType="INTEGER" property="month" />
    <result column="pouring_temp" jdbcType="DOUBLE" property="pouringTemp" />
    <result column="port_temp" jdbcType="DOUBLE" property="portTemp" />
    <result column="entry_temp" jdbcType="DOUBLE" property="entryTemp" />
    <result column="max_temp" jdbcType="DOUBLE" property="maxTemp" />
    <result column="flow_temp" jdbcType="DOUBLE" property="flowTemp" />
    <result column="min_temp" jdbcType="DOUBLE" property="minTemp" />
    <result column="flow_temp_min" jdbcType="DOUBLE" property="flowTempMin" />
    <result column="grad_temp" jdbcType="DOUBLE" property="gradTemp" />
    <result column="base_temp_diff" jdbcType="DOUBLE" property="baseTempDiff" />
    <result column="upper_low_tenp_diff" jdbcType="DOUBLE" property="upperLowTenpDiff" />
    <result column="in_out_temp_diff" jdbcType="DOUBLE" property="inOutTempDiff" />
    <result column="Intervals" jdbcType="VARCHAR" property="intervals" />
    <result column="surface_warm" jdbcType="VARCHAR" property="surfaceWarm" />
    <result column="one_cold_before" jdbcType="DOUBLE" property="oneColdBefore" />
    <result column="one_cold_after" jdbcType="DOUBLE" property="oneColdAfter" />
    <result column="middle_clod" jdbcType="DOUBLE" property="middleClod" />
    <result column="adjacent_block" jdbcType="DOUBLE" property="adjacentBlock" />
    <result column="between_block" jdbcType="DOUBLE" property="betweenBlock" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Base_Column_List">
    id, temp_control_id, `month`, pouring_temp, port_temp, entry_temp, max_temp, flow_temp, min_temp, flow_temp_min,
    grad_temp, base_temp_diff, upper_low_tenp_diff, in_out_temp_diff, Intervals, surface_warm, 
    one_cold_before, one_cold_after, middle_clod, adjacent_block, between_block, create_time, 
    `operator`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from temp_control_norm_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey">
    delete from temp_control_norm_info
    where id in
    <foreach close=")" collection="ids" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.example.dampouring.model.pojo.TempControlNormInfo">
    insert into temp_control_norm_info (id, temp_control_id, `month`, 
      pouring_temp, port_temp, entry_temp, 
      max_temp, flow_temp, grad_temp,min_temp, flow_temp_min,
      base_temp_diff, upper_low_tenp_diff, in_out_temp_diff, 
      Intervals, surface_warm, one_cold_before, 
      one_cold_after, middle_clod, adjacent_block, 
      between_block, create_time, `operator`
      )
    values (#{id,jdbcType=INTEGER}, #{tempControlId,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, 
      #{pouringTemp,jdbcType=DOUBLE}, #{portTemp,jdbcType=DOUBLE}, #{entryTemp,jdbcType=DOUBLE}, 
      #{maxTemp,jdbcType=DOUBLE}, #{flowTemp,jdbcType=DOUBLE}, #{gradTemp,jdbcType=DOUBLE}, #{minTemp,jdbcType=DOUBLE}, #{flowTempMin,jdbcType=DOUBLE},
      #{baseTempDiff,jdbcType=DOUBLE}, #{upperLowTenpDiff,jdbcType=DOUBLE}, #{inOutTempDiff,jdbcType=DOUBLE}, 
      #{intervals,jdbcType=VARCHAR}, #{surfaceWarm,jdbcType=VARCHAR}, #{oneColdBefore,jdbcType=DOUBLE}, 
      #{oneColdAfter,jdbcType=DOUBLE}, #{middleClod,jdbcType=DOUBLE}, #{adjacentBlock,jdbcType=DOUBLE}, 
      #{betweenBlock,jdbcType=DOUBLE}, #{createTime,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.dampouring.model.pojo.TempControlNormInfo">
    insert into temp_control_norm_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tempControlId != null">
        temp_control_id,
      </if>
      <if test="month != null">
        `month`,
      </if>
      <if test="pouringTemp != null">
        pouring_temp,
      </if>
      <if test="portTemp != null">
        port_temp,
      </if>
      <if test="entryTemp != null">
        entry_temp,
      </if>
      <if test="maxTemp != null">
        max_temp,
      </if>
      <if test="flowTemp != null">
        flow_temp,
      </if>
      <if test="minTemp != null">
        min_temp,
      </if>
      <if test="flowTempMin != null">
        flow_temp_min,
      </if>
      <if test="gradTemp != null">
        grad_temp,
      </if>
      <if test="baseTempDiff != null">
        base_temp_diff,
      </if>
      <if test="upperLowTenpDiff != null">
        upper_low_tenp_diff,
      </if>
      <if test="inOutTempDiff != null">
        in_out_temp_diff,
      </if>
      <if test="intervals != null">
        Intervals,
      </if>
      <if test="surfaceWarm != null">
        surface_warm,
      </if>
      <if test="oneColdBefore != null">
        one_cold_before,
      </if>
      <if test="oneColdAfter != null">
        one_cold_after,
      </if>
      <if test="middleClod != null">
        middle_clod,
      </if>
      <if test="adjacentBlock != null">
        adjacent_block,
      </if>
      <if test="betweenBlock != null">
        between_block,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tempControlId != null">
        #{tempControlId,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        #{month,jdbcType=INTEGER},
      </if>
      <if test="pouringTemp != null">
        #{pouringTemp,jdbcType=DOUBLE},
      </if>
      <if test="portTemp != null">
        #{portTemp,jdbcType=DOUBLE},
      </if>
      <if test="entryTemp != null">
        #{entryTemp,jdbcType=DOUBLE},
      </if>
      <if test="maxTemp != null">
        #{maxTemp,jdbcType=DOUBLE},
      </if>
      <if test="flowTemp != null">
        #{flowTemp,jdbcType=DOUBLE},
      </if>
      <if test="minTemp != null">
        #{minTemp,jdbcType=DOUBLE},
      </if>
      <if test="flowTempMin != null">
        #{flowTempMin,jdbcType=DOUBLE},
      </if>
      <if test="gradTemp != null">
        #{gradTemp,jdbcType=DOUBLE},
      </if>
      <if test="baseTempDiff != null">
        #{baseTempDiff,jdbcType=DOUBLE},
      </if>
      <if test="upperLowTenpDiff != null">
        #{upperLowTenpDiff,jdbcType=DOUBLE},
      </if>
      <if test="inOutTempDiff != null">
        #{inOutTempDiff,jdbcType=DOUBLE},
      </if>
      <if test="intervals != null">
        #{intervals,jdbcType=VARCHAR},
      </if>
      <if test="surfaceWarm != null">
        #{surfaceWarm,jdbcType=VARCHAR},
      </if>
      <if test="oneColdBefore != null">
        #{oneColdBefore,jdbcType=DOUBLE},
      </if>
      <if test="oneColdAfter != null">
        #{oneColdAfter,jdbcType=DOUBLE},
      </if>
      <if test="middleClod != null">
        #{middleClod,jdbcType=DOUBLE},
      </if>
      <if test="adjacentBlock != null">
        #{adjacentBlock,jdbcType=DOUBLE},
      </if>
      <if test="betweenBlock != null">
        #{betweenBlock,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.dampouring.model.pojo.TempControlNormInfo">
    update temp_control_norm_info
    <set>
      <if test="tempControlId != null">
        temp_control_id = #{tempControlId,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        `month` = #{month,jdbcType=INTEGER},
      </if>
      <if test="pouringTemp != null">
        pouring_temp = #{pouringTemp,jdbcType=DOUBLE},
      </if>
      <if test="portTemp != null">
        port_temp = #{portTemp,jdbcType=DOUBLE},
      </if>
      <if test="entryTemp != null">
        entry_temp = #{entryTemp,jdbcType=DOUBLE},
      </if>
      <if test="maxTemp != null">
        max_temp = #{maxTemp,jdbcType=DOUBLE},
      </if>
      <if test="flowTemp != null">
        flow_temp = #{flowTemp,jdbcType=DOUBLE},
      </if>
      <if test="minTemp != null">
        min_temp = #{minTemp,jdbcType=DOUBLE},
      </if>
      <if test="flowTempMin != null">
        flow_temp_min = #{flowTempMin,jdbcType=DOUBLE},
      </if>
      <if test="gradTemp != null">
        grad_temp = #{gradTemp,jdbcType=DOUBLE},
      </if>
      <if test="baseTempDiff != null">
        base_temp_diff = #{baseTempDiff,jdbcType=DOUBLE},
      </if>
      <if test="upperLowTenpDiff != null">
        upper_low_tenp_diff = #{upperLowTenpDiff,jdbcType=DOUBLE},
      </if>
      <if test="inOutTempDiff != null">
        in_out_temp_diff = #{inOutTempDiff,jdbcType=DOUBLE},
      </if>
      <if test="intervals != null">
        Intervals = #{intervals,jdbcType=VARCHAR},
      </if>
      <if test="surfaceWarm != null">
        surface_warm = #{surfaceWarm,jdbcType=VARCHAR},
      </if>
      <if test="oneColdBefore != null">
        one_cold_before = #{oneColdBefore,jdbcType=DOUBLE},
      </if>
      <if test="oneColdAfter != null">
        one_cold_after = #{oneColdAfter,jdbcType=DOUBLE},
      </if>
      <if test="middleClod != null">
        middle_clod = #{middleClod,jdbcType=DOUBLE},
      </if>
      <if test="adjacentBlock != null">
        adjacent_block = #{adjacentBlock,jdbcType=DOUBLE},
      </if>
      <if test="betweenBlock != null">
        between_block = #{betweenBlock,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.dampouring.model.pojo.TempControlNormInfo">
    update temp_control_norm_info
    set temp_control_id = #{tempControlId,jdbcType=INTEGER},
      `month` = #{month,jdbcType=INTEGER},
      pouring_temp = #{pouringTemp,jdbcType=DOUBLE},
      port_temp = #{portTemp,jdbcType=DOUBLE},
      entry_temp = #{entryTemp,jdbcType=DOUBLE},
      max_temp = #{maxTemp,jdbcType=DOUBLE},
      flow_temp = #{flowTemp,jdbcType=DOUBLE},
      min_temp = #{minTemp,jdbcType=DOUBLE},
      flow_temp_min = #{flowTempMin,jdbcType=DOUBLE},
      grad_temp = #{gradTemp,jdbcType=DOUBLE},
      base_temp_diff = #{baseTempDiff,jdbcType=DOUBLE},
      upper_low_tenp_diff = #{upperLowTenpDiff,jdbcType=DOUBLE},
      in_out_temp_diff = #{inOutTempDiff,jdbcType=DOUBLE},
      Intervals = #{intervals,jdbcType=VARCHAR},
      surface_warm = #{surfaceWarm,jdbcType=VARCHAR},
      one_cold_before = #{oneColdBefore,jdbcType=DOUBLE},
      one_cold_after = #{oneColdAfter,jdbcType=DOUBLE},
      middle_clod = #{middleClod,jdbcType=DOUBLE},
      adjacent_block = #{adjacentBlock,jdbcType=DOUBLE},
      between_block = #{betweenBlock,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=VARCHAR},
      `operator` = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByMonth" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from temp_control_norm_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectListByIds" resultType="com.example.dampouring.model.vo.TempControlNormInfoVO">
    select
    tcni.id as id,
    tcnn.name as tempControlName,
    tcni.month as month,
    tcni.port_temp as portTemp,
    tcni.entry_temp as entryTemp,
    tcni.max_temp as maxTemp,
    tcni.min_temp as minTemp,
    tcni.flow_temp_min as flowTempMin,
    tcni.pouring_temp as pouringTemp,
    tcni.flow_temp as flowTemp,
    tcni.grad_temp as gradTemp,
    tcni.base_temp_diff as baseTempDiff,
    tcni.upper_low_tenp_diff as upperLowTenpDiff,
    tcni.in_out_temp_diff as inOutTempDiff,
    tcni.intervals as intervals,
    tcni.surface_warm as surfaceWarm,
    tcni.one_cold_before as oneColdBefore,
    tcni.one_cold_after as oneColdAfter,
    tcni.middle_clod as middleClod,
    tcni.adjacent_block as adjacentBlock,
    tcni.between_block as betweenBlock,
    tcni.create_time as createTime,
    tcni.operator as operator

    from temp_control_norm_info tcni
    left join temp_control_norm_name tcnn on tcni.temp_control_id=tcnn.id
    where tcni.id in
    <foreach close=")" collection="ids" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </select>
  <select id="selectList" resultType="com.example.dampouring.model.vo.TempControlNormInfoVO">
    select
      tcni.id as id,
      tcnn.name as tempControlName,
      tcni.month as month,
      tcni.port_temp as portTemp,
      tcni.entry_temp as entryTemp,
      tcni.max_temp as maxTemp,
      tcni.pouring_temp as pouringTemp,
      tcni.flow_temp as flowTemp,
      tcni.min_temp as minTemp,
    tcni.flow_temp_min as flowTempMin,
      tcni.grad_temp as gradTemp,
      tcni.base_temp_diff as baseTempDiff,
      tcni.upper_low_tenp_diff as upperLowTenpDiff,
      tcni.in_out_temp_diff as inOutTempDiff,
      tcni.intervals as intervals,
      tcni.surface_warm as surfaceWarm,
      tcni.one_cold_before as oneColdBefore,
      tcni.one_cold_after as oneColdAfter,
      tcni.middle_clod as middleClod,
      tcni.adjacent_block as adjacentBlock,
      tcni.between_block as betweenBlock,
      tcni.create_time as createTime,
      tcni.operator as operator
    from temp_control_norm_info tcni
      left join temp_control_norm_name tcnn on tcni.temp_control_id=tcnn.id
  </select>



  <select id="selectBySb" resultType="com.example.dampouring.model.vo.TempControlNormInfoVO" parameterType="com.example.dampouring.model.pojo.SmallStorageBin">
    select
    tcni.id as id,
    tcni.month as month,
    tcnn.name as tempControlName,
    tcni.port_temp as portTemp,
    tcni.entry_temp as entryTemp,
    tcni.max_temp as maxTemp,
    tcni.pouring_temp as pouringTemp,
    tcni.flow_temp as flowTemp,
    tcni.min_temp as minTemp,
    tcni.flow_temp_min as flowTempMin,
    tcni.grad_temp as gradTemp,
    tcni.base_temp_diff as baseTempDiff,
    tcni.upper_low_tenp_diff as upperLowTenpDiff,
    tcni.in_out_temp_diff as inOutTempDiff,
    tcni.intervals as intervals,
    tcni.surface_warm as surfaceWarm,
    tcni.one_cold_before as oneColdBefore,
    tcni.one_cold_after as oneColdAfter,
    tcni.middle_clod as middleClod,
    tcni.adjacent_block as adjacentBlock,
    tcni.between_block as betweenBlock,
    tcni.create_time as createTime,
    tcni.operator as operator
    from
    temp_control_partition tcp, temp_control_norm_info tcni, temp_control_norm_name tcnn
    WHERE
    tcp.ds_start&lt;=#{dsStart} and tcp.ds_end>=#{dsStart} and tcp.temp_control_type_id=tcnn.id
    and tcp.elevation_start&lt;=#{elevationStart} and tcp.elevation_end>=#{elevationStart}
    and tcp.temp_control_type_id = tcni.temp_control_id
    and tcni.month = (select MONTH(CURDATE()))
  </select>
</mapper>