<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dampouring.model.dao.SwSiloDataMapper">
  <resultMap id="BaseResultMap" type="com.example.dampouring.model.pojo.SwSiloData">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pouring_time" jdbcType="VARCHAR" property="pouringTime" />
    <result column="mat_type" jdbcType="INTEGER" property="matType" />
    <result column="sg_id" jdbcType="INTEGER" property="sgId" />
    <result column="bata_id" jdbcType="INTEGER" property="bataId" />
    <result column="pouring_temp" jdbcType="DOUBLE" property="pouringTemp" />
    <result column="pouring_ply" jdbcType="DOUBLE" property="pouringPly" />
    <result column="fg_time" jdbcType="VARCHAR" property="fgTime" />
    <result column="gj_time" jdbcType="VARCHAR" property="gjTime" />
    <result column="lx_wk_id" jdbcType="INTEGER" property="lxWkId" />
    <result column="el_time" jdbcType="VARCHAR" property="elTime" />
    <result column="small_id" jdbcType="INTEGER" property="smallId" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pouring_time, mat_type, sg_id, bata_id, pouring_temp, pouring_ply, fg_time, gj_time, 
    lx_wk_id, el_time, small_id, create_time, `operator`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sw_silo_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey">
    delete from sw_silo_data
    where id in
    <foreach collection="ids" close=")" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.example.dampouring.model.pojo.SwSiloData">
    insert into sw_silo_data (id, pouring_time, mat_type, 
      sg_id, bata_id, pouring_temp, 
      pouring_ply, fg_time, gj_time, 
      lx_wk_id, el_time, small_id, 
      create_time, `operator`)
    values (#{id,jdbcType=INTEGER}, #{pouringTime,jdbcType=VARCHAR}, #{matType,jdbcType=INTEGER}, 
      #{sgId,jdbcType=INTEGER}, #{bataId,jdbcType=INTEGER}, #{pouringTemp,jdbcType=DOUBLE}, 
      #{pouringPly,jdbcType=DOUBLE}, #{fgTime,jdbcType=VARCHAR}, #{gjTime,jdbcType=VARCHAR}, 
      #{lxWkId,jdbcType=INTEGER}, #{elTime,jdbcType=VARCHAR}, #{smallId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.dampouring.model.pojo.SwSiloData">
    insert into sw_silo_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pouringTime != null">
        pouring_time,
      </if>
      <if test="matType != null">
        mat_type,
      </if>
      <if test="sgId != null">
        sg_id,
      </if>
      <if test="bataId != null">
        bata_id,
      </if>
      <if test="pouringTemp != null">
        pouring_temp,
      </if>
      <if test="pouringPly != null">
        pouring_ply,
      </if>
      <if test="fgTime != null">
        fg_time,
      </if>
      <if test="gjTime != null">
        gj_time,
      </if>
      <if test="lxWkId != null">
        lx_wk_id,
      </if>
      <if test="elTime != null">
        el_time,
      </if>
      <if test="smallId != null">
        small_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pouringTime != null">
        #{pouringTime,jdbcType=VARCHAR},
      </if>
      <if test="matType != null">
        #{matType,jdbcType=INTEGER},
      </if>
      <if test="sgId != null">
        #{sgId,jdbcType=INTEGER},
      </if>
      <if test="bataId != null">
        #{bataId,jdbcType=INTEGER},
      </if>
      <if test="pouringTemp != null">
        #{pouringTemp,jdbcType=DOUBLE},
      </if>
      <if test="pouringPly != null">
        #{pouringPly,jdbcType=DOUBLE},
      </if>
      <if test="fgTime != null">
        #{fgTime,jdbcType=VARCHAR},
      </if>
      <if test="gjTime != null">
        #{gjTime,jdbcType=VARCHAR},
      </if>
      <if test="lxWkId != null">
        #{lxWkId,jdbcType=INTEGER},
      </if>
      <if test="elTime != null">
        #{elTime,jdbcType=VARCHAR},
      </if>
      <if test="smallId != null">
        #{smallId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.dampouring.model.pojo.SwSiloData">
    update sw_silo_data
    <set>
      <if test="pouringTime != null">
        pouring_time = #{pouringTime,jdbcType=VARCHAR},
      </if>
      <if test="matType != null">
        mat_type = #{matType,jdbcType=INTEGER},
      </if>
      <if test="sgId != null">
        sg_id = #{sgId,jdbcType=INTEGER},
      </if>
      <if test="bataId != null">
        bata_id = #{bataId,jdbcType=INTEGER},
      </if>
      <if test="pouringTemp != null">
        pouring_temp = #{pouringTemp,jdbcType=DOUBLE},
      </if>
      <if test="pouringPly != null">
        pouring_ply = #{pouringPly,jdbcType=DOUBLE},
      </if>
      <if test="fgTime != null">
        fg_time = #{fgTime,jdbcType=VARCHAR},
      </if>
      <if test="gjTime != null">
        gj_time = #{gjTime,jdbcType=VARCHAR},
      </if>
      <if test="lxWkId != null">
        lx_wk_id = #{lxWkId,jdbcType=INTEGER},
      </if>
      <if test="elTime != null">
        el_time = #{elTime,jdbcType=VARCHAR},
      </if>
      <if test="smallId != null">
        small_id = #{smallId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.dampouring.model.pojo.SwSiloData">
    update sw_silo_data
    set pouring_time = #{pouringTime,jdbcType=VARCHAR},
      mat_type = #{matType,jdbcType=INTEGER},
      sg_id = #{sgId,jdbcType=INTEGER},
      bata_id = #{bataId,jdbcType=INTEGER},
      pouring_temp = #{pouringTemp,jdbcType=DOUBLE},
      pouring_ply = #{pouringPly,jdbcType=DOUBLE},
      fg_time = #{fgTime,jdbcType=VARCHAR},
      gj_time = #{gjTime,jdbcType=VARCHAR},
      lx_wk_id = #{lxWkId,jdbcType=INTEGER},
      el_time = #{elTime,jdbcType=VARCHAR},
      small_id = #{smallId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      `operator` = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getData" resultType="com.example.dampouring.model.vo.SwSiloDataVO">
    SELECT
      pb.id AS id,
      DATE_FORMAT(pb.open_time, '%Y%m%d%H') AS pouringTime,
      pb.beton_id AS matType,
      pb.bata_no AS bataId,
      DATE_FORMAT(pb.cover_time, '%Y%m%d%H') AS fgTime,
      ssb.elevation_end - ssb.elevation_start AS pouringPly,
      DATE_FORMAT(
              pb.inter_cooling_start_time,
              '%Y%m%d%H'
        ) AS zlTime,
      DATE_FORMAT(
              pb.second_cooling_start_time,
              '%Y%m%d%H'
        ) AS elTime,
      DATE_FORMAT(
              pb.closure_grout_time,
              '%Y%m%d%H'
        ) AS gjTime,
      pb.temp_control_id AS lxWkId,
      ssb.small_sb_no AS sbNo,
      IF (tb2.temp IS NULL, pb.design_pouring_temp, tb2.temp) AS pouringTemp,
      wp.id as wpId
    FROM
      pouring_base pb
        LEFT JOIN small_storage_bin ssb ON ssb.id = pb.small_sb_id
        RIGHT JOIN (SELECT min(id) as id,sb_id  from water_pipe GROUP BY sb_id) wp on wp.sb_id = ssb.id
        LEFT JOIN (
        SELECT
          pouring_base_id,
          avg(temperature) AS temp
        FROM
          pouring_temp_info
        GROUP BY
          pouring_base_id
      ) tb2 ON tb2.pouring_base_id = pb.id
    WHERE ssb.is_get_water='1'
    ORDER BY ssb.id desc
  </select>
  <select id="getDataZY" resultType="com.example.dampouring.model.vo.SwZyDataVO">
    SELECT
      tb1.sbNo AS sbNo,
      if(tb1.waterTemp is null,12,tb1.waterTemp) as waterTemp,
      if(tb1.flow is null,0,tb1.flow) as flow,
      DATE_FORMAT(tb1.time, '%Y%m%d%H') AS time,
	if(tb2.innerTemp is null,12,tb2.innerTemp) as innerTemp,
	if(tb3.temp is null,12,tb3.temp) as temp
    FROM
      (
      SELECT
      ssb.id AS sbId,
      ssb.small_sb_no AS sbNo,
      LEFT (wpfi.time, 10) AS time,
      avg(wpfi.enter_temp) AS waterTemp,
      avg(wpfi.flow) AS flow
      FROM
      water_pipe_flow_info wpfi
      LEFT JOIN water_pipe wp ON wp.id = wpfi.water_pipe_id
      LEFT JOIN small_storage_bin ssb ON ssb.id = wp.sb_id
      WHERE
      ssb.is_get_water = '1'
      GROUP BY
      ssb.id,
      LEFT (wpfi.time, 10)
      ) tb1
      LEFT JOIN (
      SELECT
      ssb.id AS sbId,
      avg(itsi.temp) AS innerTemp,
      LEFT (itsi.time, 10) AS time
      FROM
      inner_temp_sensor_info itsi
      LEFT JOIN inner_temp_sensor its ON its.id = itsi.inner_temp_sensor_id
      LEFT JOIN small_storage_bin ssb ON ssb.id = its.sb_id
      WHERE
      ssb.is_get_water = '1'
      GROUP BY
      ssb.id,
      LEFT (itsi.time, 10)
      ) tb2 ON tb2.sbId = tb1.sbId
      AND tb2.time = tb1.time
      LEFT JOIN (
      SELECT
      avg(temperature) AS temp,
      LEFT (date, 10) AS time
      FROM
      temp_measurements
      GROUP BY
      LEFT (date, 10)
      ) tb3 ON tb3.time = tb1.time
  </select>
  <select id="selectList" resultType="com.example.dampouring.model.vo.SwSiloDataVO">
    select
    ssd.id as id,
    ssd.pouring_time as pouringTime,
    ssd.mat_type as matType,
    ssd.sg_id as sgId,
    ssd.bata_id as bataId,
    ssd.pouring_temp as pouringTemp,
    ssd.pouring_ply as pouringPly,
    ssd.fg_time as fgTime,
    ssd.gj_time as gjTime,
    ssd.el_time as elTime,
    stb.small_sb_no as sbNo,
    ssd.create_time as createTime,
    ssd.operator as operator
    from sw_silo_data ssd
    LEFT JOIN small_storage_bin stb on stb.id = ssd.small_id
  </select>
  <select id="selectListByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sw_silo_data
    where id in
    <foreach collection="ids" close=")" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </select>
</mapper>